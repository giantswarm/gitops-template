name: validate

on:
  pull_request:
  push:
    branches: [HEAD_BRANCH, main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - run: sudo snap install shfmt
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: cache pre-commit environment
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-gitops-validate-${{ hashFiles('.pre-commit-config.yaml') }}
      - uses: pre-commit/action@v2.0.3
  test:
    needs: pre-commit
    runs-on: ubuntu-latest
    env:
      kubeval_ver: 0.16.1
    steps:
      - run: sudo apt-get install -y yamllint
      - uses: giantswarm/install-binary-action@v1
        with:
          binary: kubeval
          download_url: "https://github.com/instrumenta/kubeval/releases/download/v${version}/kubeval-linux-amd64.tar.gz"
          smoke_test: "${binary} --version"
          tarball_binary_path: "${binary}"
          version: ${{ env.kubeval_ver }}
      - name: cache validation tools
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-gitops-validate-${{ hashFiles('.pre-commit-config.yaml') }}
      - uses: actions/checkout@v3
      - name: run validation
        uses: mathiasvr/command-output@v1
        id: validate
        with:
          run: "./tools/test-all-ffb validate"
      - name: Find validation comment
        uses: peter-evans/find-comment@v2
        continue-on-error: true
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Validation output log
      - name: Delete old comment
        uses: jungwinter/comment@v1
        continue-on-error: true
        with:
          type: delete
          comment_id: ${{ steps.fc.outputs.comment-id }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create or update validation comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Validation output log

            ```text
            ${{ steps.validate.outputs.stdout }}
            ```
